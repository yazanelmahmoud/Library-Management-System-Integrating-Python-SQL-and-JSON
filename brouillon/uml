@startuml
!theme mars
!define Resource abstract class
!define User abstract class


class Bibliothèque {
  + search(keyword: String): List<Ressource>
  + addResource(Ressource: Ressource)
  + modifyResource(Ressource: Ressource)
  + addResourceCopy(Ressource: Ressource)
  + getStatistics(): Map<String, Integer>
}

class Ressource {
  - id: String
  - titre: String
  - dateApparition: Date
  - editeur: String
  - genre: String
  - codeClassification: String
}

class Livre {
  - ISBN: String
  - resume: String
}

class Musique {
  - langue: String
  - longueur: int
}

class Film {
  - language: String
  - length: int
  - synopsis: String
}

class Contributeur {
  - prenom: String
  - nom: String
  - datedenaissance: Date
  - nationalite: String
}

Contributeur "1,n"-- "*" Livre : a écrit
Contributeur "1,n"-- "*" Musique : a interpreté
Contributeur "1,n"-- "*" Musique : a composé
Contributeur "1,n"-- "*" Film : a joué
Contributeur "1,n"-- "*" Film : a réalisé

class Utilisateur {
  - login: string
  - password: string
  - prenom: String
  - nom: String
  - addresse: Adresse
  - email: String
}





class Personnel extends Utilisateur {
  + gestionPrets()
  + gestionUtilisateurs()
}

class Adherent extends Utilisateur {
  -numeroTelephone: String
  + PretDocument(exemplaire: exemplaire)
  + retourDocument(exemplaire: exemplaire)
  + HistoriqueDePrets(): List<Pret>
}


class Adhesion {
  - membre: Membre
  - DateAdhesion: Date
  - DateExpiration: Date
}

class Exemplaire {
  - Etat = {Neuf, Bon, Abimé, Perdu} 
}


Exemplaire "1..n" --* Ressource 

class Pret {
  - DatePret: Date
  - DateRetour: Date
  - rendu: double
}


Bibliotheque --|> Ressource
Bibliotheque --|> Utilisateur
Bibliotheque -[hidden]-> Adhesion

Livre--|> Ressource 
Musique --|> Ressource 
Film --|> Ressource 






@enduml
